# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.
        bind:
            $commandBus: '@messenger.bus.commands'
            $eventBus: '@messenger.bus.events'
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Request\:
        resource: '../src/Request'
        autowire: true

    _instanceof:
        App\CommandHandler\CommandHandlerInterface:
            tags: ['messenger.message_handler']

    gedmo.listener.softdeleteable:
        class: Gedmo\SoftDeleteable\SoftDeleteableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    App\Twig\Extension\ActiveMenuExtension:
        arguments: ["@request_stack"]

    App\Service\JWTService:
        arguments:
            - '%env(SSO_JWT_PRIVATE_KEY)%'
            - '%env(SSO_JWT_ALGORITHM)%'

    app.security:
      class: Symfony\Component\Security\Core\Security

    before_request_listener:
        class: App\EventListener\BeforeRequestListener
        #arguments: ["@doctrine.orm.entity_manager", "@app.security"]
        arguments: ["@doctrine.orm.entity_manager", "@security.token_storage"]
        tags:
            -
                name: kernel.event_listener
                event: kernel.controller
                method: onKernelController
